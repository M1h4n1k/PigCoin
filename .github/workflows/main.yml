name: Run Tests

on:
  push:
    branches: [ '*' ]
  pull_request:
      branches: [ '*' ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file and add environment variables
        run: echo "${{ secrets.TEST_ENV }}" > ../backend/.env

      - name: Install dependencies for Vue.js app
        run: npm i

      - name: check linting
        run: npm run lint

      - name: Build Vue.js app
        run: npm run build

  test-backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file and add environment variables
        run: echo "${{ secrets.TEST_ENV }}" > .env

      - name: Build and start Docker containers
        run: docker compose up --build -d mysql backend

      - name: Run FastAPI tests
        run: |
          docker compose exec backend pytest -v

  deploy:
    needs: [ test-frontend, test-backend ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 188.130.206.99 >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Install and Build Frontend
        working-directory: ./frontend
        run: |
          echo '${{ secrets.PROD_FRONT_ENV }}' > .env
          npm install
          npm run build

      - name: Archive Build Artifacts
        run: tar -czf frontend-build.tar.gz -C frontend/dist .

      - name: Transfer Build to Server
        run: scp frontend-build.tar.gz root@188.130.206.99:/tmp/frontend-build.tar.gz

      - name: Deploy to server
        run: ssh root@188.130.206.99 "
          cd ~/PigCoin &&
          git pull &&
          echo '${{ secrets.PROD_BACK_ENV }}' > ./backend/.env &&
          tar -xzf /tmp/frontend-build.tar.gz -C /var/www/pigcoin.evicon.fun/html/ &&
          docker compose up --build -d
          "
